-Python3运算符

--什么是运算符？
Python语言支持以下类型的运算符：
算术运算符
比较(关系)运算符
赋值运算符
逻辑运算符
位运算符
成员运算符
身份运算符
运算符优先级

--Python算术运算符
运算符	描述
+	加 - 两个对象相加
-	减 - 得到负数或是一个数减去另一个数
*	乘 - 两个数相乘或是返回一个被重复若干将的字符串
/	除 - x除以y
%	取模 - 返回除法的余数
**	幂 - 返回x的y次幂
//	取整除 - 向下取接近除数的整数

--Python比较运算符
运算符	描述
==	等于 - 比较对象是否相等
!=	不等于 - 比较两个对象是否不相等
>	大于 - 返回x是否大于y
<	小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。
>=	大于等于 - 返回x是否大于等于y。
<=	小于等于 - 返回x是否小于等于y。

--Python赋值运算符
运算符	描述
=	简单的赋值运算符
+=	加法赋值运算符
-=	减法赋值运算符
*=	乘法赋值运算符
/=	除法赋值运算符
%=	取模赋值运算符
**=	幂赋值运算符
//=	取整除赋值运算符

--Python位运算符
按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：
下表中变量a为60，b为13二进制格式如下：
a = 0011 1100
b = 0000 1101
----------------------
a&b = 0000 1100
a|b = 0011 1101
a^b = 0011 0001
~a  = 1100 0011

运算符	描述
&	按位与运算符：参与运算的两个值，如果两个相应位都为1，则该位的结果为1，否则为0
|	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
^	按位异或运算符：当两对应的二进位相异时，结果为1
~	按位取反运算符：对数据的每个二进制位取反，即把1变为0，把0变为1。~x类似于-x-1
<<	左移运算符：运算数的各二进位全部左移若干位，由"<<"右边数指定移动的位数，高位丢弃，低位补0。
>>	右移运算符：把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数，正数高位补0，低位丢弃。

--Python逻辑运算符
Python语言支持逻辑运算符。
运算符	逻辑表达式	描述
and	x and y		布尔"与" - 如果x为False，x and y返回False，否则它返回y的计算值。
or	x or y		布尔"或" - 如果x为True，它返回x的值，否则它返回y的计算值。
not	not x		布尔"非" - 如果x为True，返回False。如果x为False，它返回True。

--Python成员运算符
除了以上的一些运算符之外，Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。
运算符	描述
in	如果在指定的序列中找到值返回True，否则返回False。
not in	如果在指定的序列中没有找到值返回True，否则返回False。

--Python身份运算符
身份运算符用于比较两个对象的存储单元
运算符	描述
is	is是判断两个标识符是不是引用自一个对象，x is y类似id(x)==id(y)。
is not	is not是判断两个标识符是不是引用自不同对象，x is not y，类似id(a)!=id(b)。
注：id()函数用于获取对象内存地址。

is与==区别：
is用于判断两个变量引用对象是否为同一个，==用于判断引用变量的值是否相等。
如a = [1, 2, 3]
b = a 指向同一地址
则b is a 与 b == a返回True
b = a[:] 即使a的值拷贝一份给b后，a与b将指向不同地址
b is a返回False
b == a返回True

--Python运算符优先级
以下表格列出了从最高到最低优先级的所有运算符：
运算符			描述
**			指数(最高优先级)
~ + -			按位翻转，一元加号和减号(最后两个的方法名为 +@ 和 -@ )
* / % //		乘，除，取模和取整除
+ -			加法减法
>>  <<			右移，左移运算符
&			位 'AND'
^ |			位运算符
<= < > >=		比较运算符
<> == !=		等于运算符
= %= /= //= -= += *= **=赋值运算符
is is not		身份运算符
in not in		成员运算符
not and or		逻辑运算符
