12. Virtual Environments and Packages


12.1. Introduction

Python applications will often use packages and modules that don't come as part of the standard library.
Applications will sometimes need a specific version of a library, because the application may require that a
particular bug has been fixed or the application may be written using an obsolete version of the library's
interface.

This means it may not be possible for one Python installation to meet the requirements of every application. If
application A needs version 1.0 of a particular module but application B needs version 2.0, then the requirements
are in conflict and installing either version 1.0 or 2.0 will leave one application unable to run.

The solution for this problem is to create a virtual enviironment, a self-contained directory tree that contains a
Python installation for a particular version of Python, plus a number of additional packages.

Different applications can then use different virtual environments. To resolve the earlier example of conflicting
requirements, application A can have its own virtual environment with version 1.0 installed while application B
has another virtual environment with version 2.0. If application B requires a library be upgraded to version 3.0,
this will not affect application A's environment.


12.2 Creating Virtual Environments

The module used to create and manage virtual environments is called venv. venv will usually install the most
recent version of Python that you have available. If you have multiple versions of Python on your system, you
can select a specific Python version by running python3 or whichever version you want.

To create a virtual environment, decide upon a directory where you want to place it, and run the venv module as 
a script with the directory path.


12.3. Managing Packages with pip

You can install, upgrade, and remove packages using a program called pip. By default pip will install packages 
from the Python Package Index, <https://pypi.org>. You can browse the Python Package Index by going to it in
your web browser, or you can use pip's limited search feature.

