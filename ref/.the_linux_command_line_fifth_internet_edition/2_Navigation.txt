2 - Navigation

The first thing we need to learn (besides how to type) is how to navigate the file system
on our Linux system. In this chapter we will introduce the following commands:

pwd - Print name of current working directory
cd - Change directory
ls - List directory contents


Understanding the File System Tree

Like Windows, a Unix-like operating system such as Linux organizes its files in what is 
called a hierarchical directory structure. This means they are organized in a tree-like
pattern of directories (sometimes called folders in other systems), which may contain files
and other directories. The first directory in the file system is called the root directory.
The root directory contains files and subdirectories, which contain more files and 
subdirectories and so on.

Note that unlike Winodws, which has a separate file system tree for each storage device,
Unix-like systems such as Linux always have a single file system tree, regardless of how
many drives or storage devices are attached to the computer. Storage devices are attached 
(or more correctly, mounted) at various points on the tree according to the whims of the 
system administrator, the person (or people) responsible for the maintenance of the system.


The Current Working Directory

Most of us are probably familiar with a graphical file manager which represents the file
system tree. Notice that the tree is usually shown upended, that is, with the root at the
top and the various branches descending below.

HOwever, the command line has no pictures, so to navigate the file system tree we need to
think of it in a different way.

Imagine that the file system is a maze shaped like an upside-down tree and we are able to
stand in the middle of it. To display the current working directory, we use the pwd (print
working directory) command.
$ pwd

When we first log in to our system (or start a terminal emulator session) our current 
working directory is set to our home directory. Each user account is given its own home
directory and it is the only place a regular user is allowed to write files.


Listing the Contents of a Directory

To list the files and directories in the current working directory, we use the ls command.
$ ls

Actually, we can use the ls command to list the contents of any directory, not just the
current working directory, and there are many other fun things it can do as well.


Changing the Current Working Directory

To change our working directory (where we are standing in our tree-shaped maze) we use the
cd command. To do this, type cd followed by the pathname of the desired working directory.
A pathname is the route we take along the branches of the tree to get to the directory
we want. We can specify pathnames in one of two different ways; as absolute pathnames or
as relative pathnames. Let's deal with absolute pathnames first.

Absolute Pathnames

An absolute pathname begins with the root directory and follows the tree branch by
branch until the path to the desired directory or file is completed.

Relative Pathnames

Where an absolute pathname starts from the root directory and leads to its destination, a
relative pathname starts from the working directory. To do this, it uses a comple of special
notations to represent relative positions in the file system tree. These special notations are
"."(dot) and ".."(dot dot).

The "." notation refers to the working directory and the ".." notation refers to the working
directory's parent directory.

In almost all cases, we can omit the "./". It is implied.


Some Helpful Shortcuts

This table list some useful ways the current working directory can be quickly 
changed.

Shortcut		Result
cd			Changes the working directory to your home directory.
cd -			Changes the working directory to the previous working directory.
cd ~user_name		Changes the working directory to the home directory of user_name.


Important Facts About Filenames

On Linux systems, files are named in a manner similar to other systems such as
Windows, but there are some important differences.

1. Filenames that begin with a period character are hidden. This only means that
   ls will not list them unless you say ls -a. When your account was created,
   several hidden files were placed in your home directory to configure things
   for your account.
2. Filenames and commands in Linux, like Unix, are case sensitive. The filenames
   "File1" and "file1" refer to different files.
3. Linux has no concept of a "file extension" like some other operating systems.
   You may name files any way you like. The contents and/or purpose of a file is
   determined by other means. Although Unix-like operating systems don't use
   file extensions to determine the contents/purpose of files, many application
   programs do.
4. Though Linux supports long filenames that may contain embedded spaces and 
   punctuation characters, limit the punctuation characters in the names of files
   you create to period, dash, and underscore. Most importantly, do not embed 
   spaces in filenames. If you want to represent spaces between words in a filename,
   use underscore characters. You will thank yourself later.


Summming Up

This chapter explained how the shell treats the directory structure of the system. We
learned about absolute and relative pathnames and the basic commands that we use to 
move about the structure. In the next chapter we will use this knowledge to go on a tour
of a modern Linux system.

