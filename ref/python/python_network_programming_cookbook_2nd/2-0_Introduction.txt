Introduction

This chapter focuses on improving the socket server performance using a few 
useful techniques. Unlike the previous chapter, here we consider multiple 
clients that will be connected to the server and the communication can be 
asynchronous. The server does not need to process the request from client in
a blocking manner; this can be done independently of each other. If one client
takes more time to receive or process data, the server does not need to wait
for that. It can talk to other clients using separate threads or processes.

In this chapter, we will also explore the select module that provides the 
platform-specific I/O monitoring functions. This module is built on top of 
the select system call of the underlying operating systems's kernel. For Linux,
the manaual page is located at http://man7.org/linux/man-pages/man2/select.2.html
and can be checked to see the available features of this system call. Since our 
socket server would like to interact with many clients, select can be very helpful 
to monitor non-blocking sockets. There are some third-party Python libraries
that can also help us to deal with multiple clients at the same time. We have 
included one sample recipe using Diesel concurrent library.

Although, for the sake of brevity, we will be using two or few clients, readers
are free to extend the recipes of this chapter and use them with tens and hundreds
of clients.

