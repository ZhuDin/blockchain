-Python3数字(Number)

Python数字数据类型用于存储数值。
数据类型是不允许改变的，这就意味着如果改变数字数据类型的值，将重新分配内存空间。

Python支持三种不同的数值类型：
整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3整型是没有限制大小的，可以当作Long类型使用。
浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示。
复数((complex)) - 复数由实数部分和虚数部分构成，可以用a + bj，或者complex(a,b)表示，复数的实部a和虚部b都是浮点型。

--Python数字类型转换
有时候，我们需要对数据内置的类型进行转换，数据类型的转换，只需要将数据类型作为函数名即可。
int(x)将x转换为一个整数。
float(x)将x转换到一个浮点数。
complex(x)将x转换到一个复数，实数部分为x，虚数部分为0。
complex(x,y)将x和y转换到一个复数，实数部分为x，虚数部分为y。x和y是数字表达式。

--Python数字运算
Python解释器可以作为一个简单的计算器，可以在解释器里输入一个表达式，它将输出表达式的值。
表达式的语法：+,-,*和/，和其它语言(如Pascal或C)中一样。
注意：不同的机器上浮点运算的结果可以会不一样。
在整数除法中，除法/总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符//。
注意：//得到的并不一定是整数类型的数，它与分母分子的烦气类型有关系。

等号=用于给变量赋值。赋值之后，除了下一个提示符，解释器不会显示任何结果。
Python可以使用**操作来进行幂运算。
变量在使用前必须先"定义"(即赋予变量一个值)，否则会出现错误。
不同类型的数混合运算时会将整数转换为浮点数。
在交互模式中，最后被输出的表达式结果被赋值给变量_。且_变量应被用户视为只读变量。

--数学函数
函数		返回值(描述)
abs(x)		返回数字的绝对值
ceil(x)		返回数字的上入整数
cmp(x,y)	如果x<y返回-1，如果x==y返回0，如果x>y返回1
exp(x)		返回e的x次幂(e^x)，如math.exp(1)返回2。718281828459045
fabs(x)		返回数字的绝对值
floor(x)	返回数字的下舍整数
log(x)		如math.log(math.e)返回1.0，math.log(100,10)返回2.0
log10(x)	返回以10为基数的x的对数，如math.log10(100)返回2.0
max(x1,x2,...)	返回给定参数的最大值，参数可以为序列
min(x1,x2,...)	返回给定参数的最小值，参数可以为序列
modf(x)		返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示
pow(x,y)	x**y运算后的值
round(x[,n])	返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数
sqrt(x)		返回数字x的平方根

--随机数函数
随机数可以用于数学，游戏，安全等登载中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。
Python包含以下常用随机数函数：
函数		描述
choice(seq)	从序列的元素中随机挑选一个元素，比如random.choice(range(10)),从0到9中随机挑选一个整数
randrange([start,]stop[,step])	从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
random()	随机生成一个实数，它在[0,1)范围内
seed([x])	改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。
shuffle(lst)	将序列的所有元素随机排序
uniform(x,y)	随机生成下一个实数，它在[x,y]范围内

--三角函数
函数		描述
acos(x)		返回x的反余弦弧度值
asin(x)		返回x的反正弦弧度值
atan(x)		返回x的反正切弧度值
atan2(y,x)	返回给定的x及y坐标值的反正切值
cos(x)		返回x的弧度的余弦值
hypot(x,y)	返回欧几里得范数sqrt(x*x + y*y)
sin(x)		返回的x弧度的正弦
tan(x)		返回x弧度的正切值
degrees(x)	将弧度转换为角度，如degrees(math.pi/2)，返回90.0
radians(x)	将角度转换为弧度

--数学常量
常量		描述
pi		数学常量pi(圆周率，一般以pi来表示)
e		数学常量e，e即自然常数(自然常数)
