- Python3 基本数据类型
Python中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。在Python中变量就是变量，它没有类型，我们所说的"类型"是变量所指的内存中对象的类型。
等号(=)用来给变量赋值。
等号(=)运算符左边是一个变量名，等号(=)运算符右边是存储在变量中的值。

--多个变量赋值
Python允许同时为多个变量赋值。例如：
a = b = c = 1

也可以为多个对象指定多个变量。例如：
a, b, c = 1, 2, 'runoob'

--标准数据类型
Python3中有六个标准的数据类型：
Number (数字)
String (字符串)
List (列表)
Tuple (组合)
Set (集合)
Dictionary (字典)

Python3的六个标准数据类型中：
不可变数据(3个)：Number(数字)、String(字符串)、Tuple(元组)；
可变数据(3个)：List(列表)、Dictionary(字典)、Set(集合)。

--Number(数字)
Python3支持int、float、bool、complex(复数)。
在Python3里，只有一种整数类型int，表示为长整形，没有python2中的Long。
像大多数语言一样，数值类型的赋值和计算都是很直观的。
内置的type()函数可以用来查询变量所指的对象类型。
此外还可以用isinstance函数来判断变量类型。

isinstance和type的区别在于：
type()不会认为子类是一种父类类型。
isinstance()会认为子类是一种父类类型。

注意：在Python2中是没有布尔型的，它用数字0表示False，用1表示True。到Python3中，把True和False定义成关键字了，但它们的值还是1和0，它们可以和数字相加。

可以使用del语句删除一些对象或对象的引用。del语句的语法是：
del var[, var2[, var3[..., varN]]]

--String(字符串)
Python中的字符串用单引号 ' 或双引号 " 括起来，同时使用反斜杠 \ 转义特殊字符。
字符串的截取的语法格式如下：
变量[头下标:尾下标]

索引值以0为开始值，-1为从末尾的开始位置。
加号 + 是字符串的连接符，星号 * 表示复制当前字符串，紧跟的数字为复制的次数。

Python使用反斜杠(\)转义特殊字符，如果你不想让反斜杠发生转义，可以在字符串前面添加一个 r ，表示原始字符串。
另外，反斜杠(\)可以作为续行符，表示下一行是上一行的延续。也可以使用"""..."""或者'''...'''跨越多行。
注意，Python没有单独的字符类型，一个字符就是长度为1的字符串。
与C语言中字符串不同的是，Python字符串不能被改变。向一个索引位置赋值，会导致错误。

--List(列表)
List(列表)是Python中使用最频繁的数据类型。
列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表(即嵌套)。
列表是写在方括号[]之间、用逗号分隔开的元素列表。
和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。

列表截取的语法格式如下：
变量[头下标:尾下标]
索引值以0为开始值，-1为从末尾的开始位置。
加号+是列表的连接运算符，星号*是重复操作。
与Python字符串不一样的是，列表中的元素是可以改变的。
Python列表截取可以接收第三个参数，参数作用是截取的步长。如果第三个参数为负数表示逆向读取，例如，letter[::-1]表示字符串翻转。

--Tuple(元组)
元组(tuple)与列表类似，不同之处在于元组的元素不能修改。元组写在小括号()里，元素之间用逗号隔开。
元组中的元素类型也可以不相同。
元组与字符串类似，可以被索引且下标索引从0开始，-1为末尾开始的位置。也可以进行截取。

可以把字符串看作一种特殊的元组。
虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。
构造包含0个或1个元素的元组比较特殊，所以有一些额外的语法无则：
tup1 = ()	# 空元组
tup2 = (20, )	# 一个元素，需要在元素后添加逗号

string、list和tuple都属于sequence(序列)。

--Set(集合)
集合(set)是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。
基本功能是进行成员关系测试和删除重复元素。
可以使用大括号 {} 或者 set() 函数创建集合，注意：创建一个空集合必须使用set()而不是{}，因为{}是用来创建一个空字典。

--Dictionary(字典)
字典(dictionary)是Python中另一个非常有用的内置数据类型。
列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。
字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key):值(value) 的集合。
键(key)必须使用不可变类型。
在同一字典中，键(key)必须是唯一的。

构造函数dict()可以直接从键值对序列中构建字典。

--Python数据类型转换
数据类型的转换时，只需要将数据类型作为函数名即可。
int(x[,base])		将x转换为一个整数
float(x)		将x转换到一个浮点数
complex(real[,imag])	创建一个复数
str(x)			将对象x转换为字符串
repr(x)			将对象x转换为表达式字符串
eval(str)		用来计算在字符串中的有效Python表达式，并返回一个对象
tuple(s)		将序列s转换为一个元组
list(s)			将序列s转换为一个列表
set(s)			转换为可变集合
dict(d)			创建一个字典。d必须是一个(key,value)元组序列。
frozenset(s)		转换为不可变集合
chr(x)			将一个整数转换为一个字符
ord(x)			将一个字符转换为它的整数值
hex(x)			将一个整数转换为一个十六进制字符串
oct(x)			将一个整数转换为一个八进制字符串
