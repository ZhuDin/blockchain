-Python3字符串

字符串是Python中最常用的数据类型。可以使用('或")来创建字符串。
创建字符串很简单，只要为变量分配一个值即可。

--Python访问字符串中的值
Python不支持单字符类型，单字符在Python中也是作为一个字符串使用。
Python访问子字符串，可以使用方括号来截取字符串。

--Python字符串更新
可以截取字符串的一部分并与其它字段拼接

--Python转义字符
当需要在字符中使用特殊字符时，python用反斜杠(\)转义字符。
转义字符	描述
\(在行尾时)	续行符
\\		反斜杠符号
\'		单引号
\"		双引号
\a		响铃
\b		退格(Backspace)
\000		空
\n		换行
\v		纵向制表符
\t		横向制表符
\r		回车
\f		换页
\oyy		八进制，yy代表的字符
\xyy		十六进制数，yy代表的字符
\other		其它的字符以普通格式输出

--Python字符串运算符
操作符		描述
+		字符串连接
*		重复输出字符串
[]		通过索引获取字符串中字符
[:]		截取字符串中的一部分，遵循左闭右开原则
in		成员运算符 - 如果字符串中包含给定的字符返回True
not in		成员运算符 - 如果字符串中不包含给定的字符返回True
r/R		原始字符串 - 所有字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。原始字符串除在字符串的第一个引号前加上字母r(可以大小写)以外，与普通字符串有着几乎完全相同的语法
%		格式字符串

--Python字符串格式化
Python支持格式化字符串的输出。尽管这样可能会用到非常复杂的表达式，但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符串中。
在Python中，字符串格式化使用与C中sprintf函数一样的语法。
实例：print("My name is %s, I am %d year old" % ('zd', 10))
Python字符串格式化符号：
符号		描述
%c		格式化字符及其ASCII码
%s		格式化字符串
%d		格式化整数
%u		格式化无符号整型
%o		格式化无符号八进制数
%x		格式化无符号十六进制数
%X		格式化无符号十六进制数(大写)
%f		格式化浮点数字，可指定小数点后的精度
%e		用科学计数法格式化浮点数
%E		作用同%e，用科学计数法模式化浮点数
%g		%f和%e的科室
%G		#f和#E的科室
%p		用十六进制数格式化变量的地址

格式化操作符辅助指令：
符号		功能
*		定义宽度或者小数点精度
-		用做左对齐
+		在正数前面显示加号(+)
<sp>		在正数前面显示空格
#		在八进制数前面显示零('0')，在十六进制前面显示'0x'或者'0X'
0		显示的数字前面填充'0'而不是默认的空格
%		'%%'输出一个单一的'%'
(var)		映射变量(字典参数)
m.n.		m是显示的最小总宽度，n是小数点后的位数
Python2.6开始，新增了一种格式化字符串的函数str.format()，它增强了字符串格式化的功能

--Python三引号
python三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。
三引号让程序员从引号和特殊字符串的泥潭里面解脱出来，自始至终保持一小块字符串的格式是所谓的WYSIWYG(所见即所得)格式的。

--Unicode字符串
在Python2中，普通字符串是以8位ASCII码进行存储的，而Unicode字符串则存储为16位unicode字符串，这样能够表示更多的字符集。使用的语法是在字符串前面加上前缀u。
在Python3中，所有的字符串老师Unicode字符串。

--Python的字符串内建函数
Python的字符串常用内建函数如下：
方法		描述
capitalize()	将字符串的第一个字符转换为大写
center(width,fillchar)	返回一个指定的宽度width居中的字符串，fillchar为填充的字符，默认为空格
count(str,beg-0,end=len(string))	返回str在string里面出现的次数，如果beg或者end指定则返回指定范围内str出现的次数
bytes.decode(encoding="utf=8",errors="strict")	Python3中没有decode方法，但我们可以使用bytes对象的decode()方法来解码给定的bytes对象，这个bytes对象可以由str.encode()来编码返回
encode(encoding='UTF-8',errors='strict')	以encoding指定的编码格式编码字符串，如果出错默认报一个ValueError的导演，除非errors指定的是'ignore'或者'replace'
endswith(suffix,beg=0,end=len(string))	检查字符串是否以obj结束，如果beg或者end指定则检查指定的范围内是否以obj结束，如果是，返回True，否则返回False
expandtabs(tabsize=8)	把字符串string中的tab符号转为空格，tab符号默认的空格数是8
find(str,beg=0,end=len(string))	检测str是否包含在字符串中，如果指定范围beg和end，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1
index(str,beg=0,end=len(string))	跟find()方法一样，只不过如果str不在字符串中会报一个异常
isalnum()	如果字符串至少有一个字符并且所有字符都是字母或数字则返回True，否则返回False
isalpha()	如果字符串至少有一个字符并且所有字符都是字母则返回True，否则返回False
isdigit()	如果字符串只包含数字则返回True否则返回False
islower()	如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回True，否则返回False
isnumeric()	如果字符串中只包含数字字符，则返回True，否则返回False
isspace()	如果字符串中只包含空白，则返回True，否则返回False
istitle()	如果字符串是标题化的则返回True，否则返回False
isupper()	如果字符串中包含至少一个区分大小写的字符，并且所有这些字符老师大写，则返回True，否则返回False
join(seq)	以指定字符串作为分隔符，将seq中所有的元素(的字符串表示)合并为一个新的字符串
len(string)	返回字符串长度
ljust(width[,fillchar])	返回一个原字符串左对齐，并使用fillchar填充到长度width的新字符串，fillchar默认为空格
lower()		转换字符串中所有大写字符为小写
lstrip()	截掉字符串左边的空格或指定字符
maketrans()	创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标
max(str)	返回字符串str中最大的字母
min(str)	返回字符串str中最小的字母
replace(old,new[,max])	把字符串中的str1替换成str2，如果max指定，则替换不超过max次
rfind(str,beg=0,end=len(string))	类似于index()，不过是从右边开始
rjust(width[,fillchar])	返回一个原字符串右对齐，并使用fillchar(默认空格)填充到长度width的新字符串
rstrip()	删除字符串末尾的空格
split(str="",num=string.count(str))	以str为分隔符截取字符串，如果num有指定值，则公截取num+1个子字符串
splitlines([keepends])	按照行('\r','\r\n','\n')分隔，返回一个包含各行作为元素的列表，如果参数keepends为False，不包含换行符，如果为True，则保留换行符
startwith(substr,beg=0,end=len(string))	检查字符串是否以指定子字符串substr开头，是则返回True，否则返回False。如果beg和end指定值，则在指定范围内检查
rstrip([chars])	在字符串上执行lstrip()和rstrip()
swapcase()	将字符串中大写转换为小写，小写转换为大写
title()		返回"标题化"的字符串，就是说所有单词都是以大写开始，其余字母均为小写(见istitle())
translate(table,deletechars="")	根据str给出的表(包含256个字符)转换string的字符，要过滤掉的字符放到deletechars参数中
upper()		转换字符串中的小写字母为大写
zfill(width)	返回长度为width的字符串，原字符串右对齐，前面填充0
isdecimal()	检查字符串是否包含十进制字符，如果是返回true，否则返回false


Python format格式化函数

Python2.6新增了一种格式化字符串的函数str.format()，它增强了字符串格式化的功能。
基本语法是通过{}和:来代替之前的%
format函数可以接受不限个参数，位置可以不安顺序。

数字格式化

数字		格式			输出		描述
3.1415926	{:.2f}			3.14		保留小数点后两位
3.1415926	{:+.2f}			+3.14		带符号保留小数点后两位
-1		{:+.2f}			-1.00		带符号保留小数点后两位
2.71828		{:.0f}			3		不带小数
5		{:0>2d}			05		数字补零(填充左边，宽度为2)
5		{:x<4d}			5xxx		数字补x(填充右边，宽度为4)
10		{:x<4d}			10xx		数字补x(填充右边，宽度为4)
1000000		{:,}			1,000,000	以逗号分隔数字格式
0.25		{:.2%}			25.00%		百分比格式
1000000000	{:.2e}			1.00e+09	指数记法
13		{:>10d}			    13		右对齐(默认,宽度为10)
13		{:<10d}			13		左对齐(宽度为10)
13		{:^10d}			  13  		中间对齐(宽度为10)

11		'{:b}'.format(11)	1011		进制
11		'{:d}'.foramt(11)	11
11		'{:o}'.format(11)	13
11		'{:x}'.format(11)	b
11		'{:#x}'.format(11)	0xb
11		'{:#X}'.format(11)	0XB

^,<,>分别是居中、左对齐、右对齐，后面带宽度，:号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。
+表示在正数前显示+,负数前显示-; (空格)表示在正数前加空格。
b、d、o、x分别是二进制、十进制、八进制、十六进制。
此外可以使用大括号{}来转义大括号。

