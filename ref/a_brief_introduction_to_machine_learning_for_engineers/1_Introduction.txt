Introduction

Having taught courses on machine learning, I am often asked by colleagues
and students with a background in engineering to suggest "the 
best place to start" to get into this subject. I typically respond with a
list of books - for a general, but slightly outdated introduction, read
this book; for a detailed survey of methods based on probabilistic models,
check this other reference; to learn about statistical learning, I
found this text useful; and so on. This answer strikes me, and most
likely also my interlocutors, as quite unsatisfactory. This is especially
so since the size of many of these books may be discouraging for busy
professionals and students working on other projects. This monograph
is an attempt to offer a basic and compact reference that describes key 
ideas and principles in simple terms and within a unified treatment,
encompassing also more recent developments and pointers to the 
literature for further study.


1.1 What is Machine Learning?

A useful way to introduce the machine learning methodology is by 
means of a comparison with the conventional engineeriing design flow.

This starts with a in-depth analysis of the problem domain, which 
culminates with the definition of a mathematical model. The mathematical
model is meant to capture the key features of the problem under
study, and is typically the result of the work of a number of experts.
The mathematical model is finally leveraged to derive hand-crafted 
solutions to the problem.

For instance, consider the problem of defining a chemical process
to produce a given molecule. The conventional flow requires chemists
to leverage their knowledge of models that predict the outcome of 
individual chemical reactions, in order to craft a sequence of suitable steps
that synthesize the desired molecule. Another example is the design
of speech translation or image/video compression algorithms. Both of
these tasks involve the definition of models and algorithms by teams
of experts, such as linguists, psychologists, and signal processing 
practitioners, not infrequently during the course of long standardization
meetings.

The engineering design flow outlined above may be too costly and
inefficient for problems in which faster or less expensive solutions are
desirable. The machie learning alternative is to collect large data sets,
e.g., of labelled speech, images or videos, and to use this information
to train general-purpose learning machines to carry out the desired
task. While the standard engineering flow relies on domain knowkedge
and on design optiized for the problem at hand, machine learning
lets large amounts of data dictate algorithms and solutions. To this
end, rahter than requiring a precise model of the set-up under study,
machine learning requires the specification of an objective, of a model
to be trained, and an optimization technique.

Returning to the first example above, a machine learning approach 
would proceed by training a general-purpose machine to predit the
outcome of known chemical reactions based on a large data set, and
by then using the trained algorithm to explore ways to produce more
complex molecules. In a similar manner, large data sets of images or
videos would be used to train a general-purpose algorithm with the aim
of obtaining compressed representations from which the original input
can be recovered with some distortion.


1.2 When to Use Machine Learning?

Based on the discussion above, machine learning can offer an efficient
alternative to the conventional engineering flow when development cost
and time are the main concerns, or when the problem appears to be
too complex to be studied in its full generality. On the flip side, the
approach has the key disadvantages of providing generally suboptimal
performance, or hinderiing interpretability of the solution, and to apply
only to a limited set of problems.

In order to identify tasks for which machine learning methods may 
be useful, reference suggests the following criteria:

1. the task involves a function that maps well-defined inputs to well-defined outputs;
2. large data sets exist or can be created containing input-output pairs;
3. the task provides clear feedback with clearly definable goals and metrics;
4. the task does not involve long chains of logic or reasoning that
   depend on diverse background knowledge or common sense;
5. the taks does not require detailed explanations for how the decision was made;
6. the task has a tolerance for error and no need for provably correct or optimal solutions;
7. the phenomenon or function being learned should not change rapidly over time;
8. no specialized dexterity, physical skills, or mobility is required.

These criteria are useful guidelines for the decision of whether machine 
learning methods are suitable for a given task of interest. They also offer
a convenient demarcation line between machine learning as is intended
today, with its focus on training and computational statistics tools, and
more general notions of Artificial Intelligence (AI) based on knowledge
and common sense.


1.2.1 Learning Tasks

We can distinguish among three different main types of machine learning 
problems, which are briefly introduced below. The discussion reflects
the focus of this monograph on parametric probabilistic models,
as further elaborated on in the next section.

1. Supervised learning

2. Unsupervised learning

3. Reinforcement learning

Reinforcement learning refers to the problem of inferring optimal sequetial
decisions based on rewards or punishments received as a result of previous 
actions. Under suprevised learning, the "label" t refers to an action to be 
taken when the learner is an informational state about the environment given
by a variable x. Upon taking an action t in a state x, the learner is provided 
with feedback on the immediate reward accrued via this decision, and the
environment moves on to a different state. As an example, an agent can be
trained to navigate a given environment in the presence of obstacles by
penalizing decisions that result in collisions.

Reinforcement learning is hence neither supervised, since the learner is
not provided with the optimal actions t to select in a given state x; nor
is it fully unsupervised, given the availability of feedback on teh quality 
of the chose action. Reinforcement learning is also distinguished from
supervised and unsupervised learning due to the influence of previous
actions on future states and rewards.

This monograph focuses on supervised and unsupervised learning.
These general tasks can be further classified along the following 
dimensions.

  * Passive us. active learning: A passive learner is given the training
    examples, while an active learner can affect the choice of training
    examples on the basis of prior observations.

  * Offline us. online learning: Offline learning operates over a batch
    of training samples, while online learning processes samples in a streaming
    fashion. Note that reinforcement learning operates inherently in an
    online manner, while supervised and unsupervised learning can be carried
    out by following either offline or online formulations.

This monograph considers only passive and offline learning.


1.3 Goals and Outline




