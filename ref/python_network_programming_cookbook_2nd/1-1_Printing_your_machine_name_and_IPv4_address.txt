Printing your machine's name and IPv4 address

Sometimes, you need to quickly discover some information
about your machine, for example, the hostname, IP address,
number of network interfaces, and so on. This is very easy to
achieve using Python sripts.


Getting ready

You need to install Python on your machine before you start
coding. Python comes preinstalled in most of the Linux
distribution. 


How to do it...

In the latter versions of Ubuntu since Ubuntu 14.04, Python 3
can be executed by typing python3:

$ python3

First, we need to import the Python socket library with the
following command:

>>> import socket

Then, we call the gethostname() method from the socket library
and store the result in a variable as follows:

host_name = socket.gethostname()
print("Host name: %s" % host_name)
print("IP address: %s" % socket.gethostbyname(host_name))

The entire activity can be wrapped in a free-standing function, 
print_machine_info(), which uses the built-in socket class 
methods.

We call our function from the usual Python __main__ block.
During runtime, Python  assigns values to some interal
variables such as __name__. In this case, __name__refers to the name
of the calling process. When running this script from the
command line, as shown in the following command, the name 
will be __main__. But it will be different if the module is imported
from another script. This means that, when the module is called
from the command line, it will automatically run our
print_machine_info function function; however, when imported separately, 
the user will need to explicity call the function.

Listing 1-1 shows how to get our machine info, as follows:
import socket

def print_machine_info():
    host_name = socket.gethostname()
    ip_address = socket.gethostbyname(host_name)
    print("Host name: %s" % host_name)
    print("IP address: %s" % ip_address)

if __name__ == '__main__':
    print_machine_info()

In order to run this recipe, you can use the provided source
file from the command line as follows:

$ python3 1-2.py

The hostname is what you assigned to your computer when
you configured your operating system. This output will be
different on your machine depending on the system's host
configuration. Here host name indicates where the Python
interpreter is currently executing.


How it works...

The import socket statement imports one of Python's core
networking libraries. Then, we use the two utility
functions, gethostname() and gethostbyname(host_name). You
can type help(socket.gethostname) to see the online help
information from within the command line. Alternatively,
you can type the following address in your web browser at 
http://docs.python.org/3/library/socket.html. You can refer to the 
following code:
  
    gethostname(...)
	gethostname() -> string
	Return the current host name.

    gethostbyname(...)
	gethostbyname(host) -> address
	Return the IP address (a string of the form
	'255.255.255.255') for a host.

The first function takes no parameter and returns the 
current or localhost name. The second function takes a
sinple hostname parameter and returns its IP address.

