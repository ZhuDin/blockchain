Storing Keys with Associated Values in Hash Maps

The last of our common collections is the hash map, The type HashMap<k, v> stores a mapping of
keys of type k to values of type v. It does this via a hashing function, which determines how it
places these keys and values into memory. Many programming languages support this kind of data
structure, but they often use a different name, such as hash, map, object, hash table, dictionary, or
associative array, just to name a few.

Hahs maps are useful when you want to look up data not by using an index, as you can with vectors,
but by using a key that can be of any type, For example, in a game, you could keep track of each
team's score in a hash map in which each key is a team's name and the values are each team's score.
Given a team name, you can retrieve its score.

We'll go over the basic API of hash maps in this section, but many more goodies are hiding in the 
functions defined on HashMap<k, v> by the standard library. As always, check the standard library
decumentation for more information.


Creating a New Hash Map


