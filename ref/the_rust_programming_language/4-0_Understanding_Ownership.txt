Understanding Ownership

Ownership is Rust's most unique feature, and it enables Rust to make memory safety guarantees
without needing a garbage collector. Therefore, it's important to understand how ownership works
in Rust. In this chapter, we'll talk about ownership as well as everal related features: borrowing,
slices, and how Rust lays data out in memory.


Summary 

The concepts of ownership, borrowing, and slices ensure memory safety in Rust programs at
compile time. The Rust language gives you control over your memory usage in the same way as
other systems programming languages, but having the owner of data automatically clean up that
data when the owner goes out of scope means you don't have to write and debug extra code to get
this control.

Ownership affects hwo lots of other parts of Rust work, so we'll talk about these concepts further
throughout the rest of the book. Let's move on to Chapter 5 and look at grouping pieces of data
together in a struct.

