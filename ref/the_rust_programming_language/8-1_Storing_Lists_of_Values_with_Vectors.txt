Storing Lists of Values with Vectors

The first collection type we'll look at is Vec<T>, also known as a vector. Vectors allow you to store
more than one value in a single data structure that puts all the values next to each other in memory
Vectors can only store values of the same type. They are useful when you have a list of items, such
as the lines of text in a file or the prices of items in a shopping cart.


Creating a New Vector

To create a new, empty vector, we can call the Vec::new function, as shown in Listing 8-1.

Listing 8-1: Creating a new, empty vector to hold values of type i32
let v: Vec<i32> = Vec::new();

Note that we added a type annotation here. Because we aren't inserting any values into this vector, 
Rust doesn't know what kind of elements we intend to store.

