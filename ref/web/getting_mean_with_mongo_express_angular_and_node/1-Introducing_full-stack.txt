Setting the baseline

Full-stack development is very rewarding when you get it right. There are many moving parts to an application and it’s your job to get them working in harmony. The best first step you can take is to understand the building blocks you have to work with and look at the ways you can put them together to achieve different results.

This is what part 1 is all about. In chapter 1 we’ll take a look at the benefits of learning full-stack development in a bit more detail and explore the components of the MEAN stack. Chapter 2 builds on this knowledge of the components and discusses how you can use them together to build different things.

By the end of part 1 you’ll have a good understanding of possible software and hardware architectures for a MEAN-stack application, as well as the plan for the application we’ll build throughout the book.


Introducing full-stack development

This chapter covers
■ The benefits of full-stack development
■ An overview of the MEAN stack components
■ What makes the MEAN stack so compelling
■ A preview of the application we’ll build throughout this book

If you’re like me then you’re probably impatient to dive into some code and get on with building something. But let’s take a moment first to clarify what is meant by full-stack development, and look at the component parts of the stack to make sure you understand each. 

When I talk about full-stack development, I’m really talking about developing all parts of a website or application. The full stack starts with the database and web server in the back end, contains application logic and control in the middle, and goes all the way through to the user interface at the front end.

The MEAN stack is comprised of four main technologies, with a cast of supporting technologies:
■ MongoDB - the database
■ Express - the web framework
■ AngularJS - the front-end framework
■ Node.js - the web server

MongoDB has been around since 2007, and is actively maintained by MongoDB Inc., previously known as 10gen. 

Express was first released in 2009 by T. J. Holowaychuk and has since become the most popular framework for Node.js. It’s open source with more than 100 contributors, and is actively developed and supported.

AngularJS is open source and backed by Google. It has been around since 2010 and is constantly being developed and extended.

Node.js was created in 2009, and its development and maintenance are sponsored by Joyent. Node.js uses Google’s open source V8 JavaScript engine at its core.