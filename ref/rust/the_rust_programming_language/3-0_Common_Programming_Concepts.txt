3. Common Programming Concepts

This chapter covers concepts that appear in almost every programming language and how they work
in Rust. Many programming languages have much in common at their core. None of the concepts 
presented in this chapter are unique to Rust, but we'll discuss them in the context of Rust and 
explain the conventions around using these concepts.

Specifically, you'll learn about variables, basic types, functions, comments, and control flow. These
foundations will be in every Rust program, and learning them early will give you a strong core to
start from.


Keywords

The Rust language has a set of keywords that are reserved for use by the language only, such
as in other languages. Keep in mind that you cannot use these words as names of variables or
functions. Most of the keywords have special meanings, and you'll be using them to do various
tasks in your Rust programs; a few have no current functionality associated with them but have
been reserved for functionality that might be added to Rust in the future. You can find a list of
the keywords in Appendix A.


Summary

You made it! That was a sizable chapter: you learned about variables, scalar and compound data 
types, functions, comments, if expressions, and loops!

When you're ready to move on, we'll talk about a concept in Rust tht doesn't commonly exist in
other programming languages: ownership.

