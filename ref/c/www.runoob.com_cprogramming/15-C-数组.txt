C 数组

C 语言支持数组数据结构，它可以存储一个固定大小的相同类型元素的顺序集合。数组是用来存储一系列数据，但它往往被认为是一系列相同类型的变量。

数组的声明并不是声明一个个单独的变量，比如 number0、number1、...、number99，而是声明一个数组变量，比如 numbers，然后使用 numbers[0]、numbers[1]、...、numbers[99] 来代表一个个单独的变量。数组中的特定元素可以通过索引访问。

所有的数组都是由连续的内存位置组成。最低的地址对应第一个元素，最高的地址对应最后一个元素。


声明数组

在 C 中要声明一个数组，需要指定元素的类型和元素的数量，如下所示：

	type arrayName [ arraySize ];

这叫做一维数组。arraySize 必须是一个大于零的整数常量，type 可以是任意有效的 C 数据类型。


初始化数组

在 C 中，您可以逐个初始化数组，也可以使用一个初始化语句.

如果您省略掉了数组的大小，数组的大小则为初始化时元素的个数。


访问数组元素

数组元素可以通过数组名称加索引进行访问。元素的索引是放在方括号内，跟在数组名称的后边。


C 中数组详解

在 C 中，数组是非常重要的，我们需要了解更多有关数组的细节。下面列出了 C 程序员必须清楚的一些与数组相关的重要概念：

概念						描述
多维数组					C 支持多维数组。多维数组最简单的形式是二维数组。
传递数组给函数			您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。
从函数返回数组			C 允许从函数返回数组。
指向数组的指针			您可以通过指定不带索引的数组名称来生成一个指向数组中第一个元素的指针。


数组和指针的关系

  * 函数的参数中 数组类型参数 int a[]本质是指针 可以直接换成 int *a;

  * 可以用数组的运算符[]进行运算，而且可以通过a[0]就直接修改了外面的数组元素;

  * size of(a) == sizeof(int *) 所以函数内部没法用sizeof得到数组的长度 只能传一个len;

  * 数组变量是特殊的指针，数组变量本身表达地址，int a[10];   int *p =a;
  
  * 数组变量无需用取址符& ;
  
  * 数组的元素表达的是变量，需要用&取地址,如 m = &a[0];

  * []运算符可以对数组做，也可以对指针做 p[0] == a[0];
  
  * *运算符可以对指针做，也可以对数组做 *a = 25, *a可以得到或者修改数组首个元素的值;
  
  * 实际上数组是 const 的指针，所以不能被赋值。 如果 int a[] = {1,2,5,7}; int b[]，由于 int b[]实质上等价于 <===> int const *b;    b 是一个常数，不能被改变，初始化出来代表这个数组就不能再改变。 b = a; (错误) 数组变量之间是不可以这样互相赋值的。 而 int *q = a; 这样是可以的。